define("tiny_media/embed/embedinsert",["exports","core/prefetch","core/str","../common","../helpers","../selectors","core/dropzone","editor_tiny/uploader","./embedhandler","./embedhelpers","./embedpreview","../embedmodal","core/templates"],(function(_exports,_prefetch,_str,_common,_helpers,_selectors,_dropzone,_uploader,_embedhandler,_embedhelpers,_embedpreview,_embedmodal,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EmbedInsert=void 0,_selectors=_interopRequireDefault(_selectors),_dropzone=_interopRequireDefault(_dropzone),_uploader=_interopRequireDefault(_uploader),_embedmodal=_interopRequireDefault(_embedmodal),_templates=_interopRequireDefault(_templates),(0,_prefetch.prefetchStrings)(_common.component,["insertmedia","addmediafilesdrop","uploading","loadingmedia"]);_exports.EmbedInsert=class{constructor(data){_defineProperty(this,"init",(async()=>{const langStringKeys=["insertmedia","addmediafilesdrop","uploading","loadingmedia"],langStringValues=await(0,_str.getStrings)([...langStringKeys].map((key=>({key:key,component:_common.component}))));if(this.langStrings=Object.fromEntries(langStringKeys.map(((key,index)=>[key,langStringValues[index]]))),this.currentModal.setTitle(this.langStrings.insertmedia),this.canShowDropZone&&!this.mediaType){const dropZoneEle=document.querySelector(_selectors.default.EMBED.elements.dropzoneContainer),dropZone=new _dropzone.default(dropZoneEle,"audio/*,video/*",(files=>{this.handleUploadedFile(files)}));dropZone.setLabel(this.langStrings.addmediafilesdrop),dropZone.init()}})),_defineProperty(this,"loadMediaPreview",(async url=>{this.originalUrl=url;const[formattedUrl,type,title]=await(0,_embedhelpers.formatMediaUrl)(url,this);this.mediaSource=formattedUrl,title&&(this.fetchedMediaLinkTitle=title);const mediaType=null!=type?type:await(0,_embedhelpers.getFileMimeTypeFromUrl)(this.mediaSource);if(!_selectors.default.EMBED.mediaTypes.includes(mediaType)){return this.root.querySelector(_selectors.default.EMBED.elements.urlWarning).innerHTML=await(0,_str.getString)("onlymediafilesdesc",_common.component),(0,_helpers.showElements)(_selectors.default.EMBED.elements.urlWarning,this.root),void(0,_helpers.stopMediaLoading)(this.root,_selectors.default.EMBED.type)}this.isUpdating&&!this.newMediaLink||"link"!==mediaType?this.processMediaPreview(mediaType):(this.mediaTypeSelectorModal=await _embedmodal.default.create({large:!1,title:(0,_str.getString)("medialinktypeselector",_common.component),templateContext:{elementid:this.editor.getElement().id},body:await _templates.default.render("".concat(_common.component,"/embed/link_media_type_selector"))}),this.mediaTypeSelectorRoot=this.mediaTypeSelectorModal.getRoot()[0],this.registerMediaTypeSelectorEvents(this.mediaTypeSelectorRoot),(0,_helpers.stopMediaLoading)(this.root,_selectors.default.EMBED.type))})),_defineProperty(this,"processMediaPreview",(async mediaType=>{this.mediaType=this.mediaType&&"link"!==mediaType?this.mediaType:mediaType,(0,_helpers.setPropertiesFromData)(this,await new _embedhandler.EmbedHandler(this).getMediaTemplateContext());const templateContext=await(0,_embedhelpers.mediaDetailsTemplateContext)(this);if("video"===this.mediaType&&this.isUpdating){const media=templateContext.media;""!==media.height&&""!==media.width&&(this.mediaHeight=media.height,this.mediaWidth=media.width)}this.isUpdating&&!this.newMediaLink&&(this.mediaTitle=templateContext.media.title),new _embedhandler.EmbedHandler(this).loadMediaDetails(new _embedpreview.EmbedPreview(this),templateContext)})),_defineProperty(this,"updateLoaderIcon",(function(root,langStrings){let progress=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const loaderIconState=root.querySelector(_selectors.default.EMBED.elements.loaderIconContainer+" div");loaderIconState.innerHTML=null!==progress?"".concat(langStrings.uploading," ").concat(Math.round(progress),"%"):langStrings.loadingmedia})),_defineProperty(this,"filePickerCallback",(params=>{params.url&&(this.mediaTagType&&(delete this.mediaTagType,this.mediaType=null),this.newFileUpload=!0,this.loadMediaPreview(params.url))})),_defineProperty(this,"handleUploadedFile",(async files=>{try{(0,_helpers.startMediaLoading)(this.root,_selectors.default.EMBED.type);const fileURL=await(0,_uploader.default)(this.editor,"media",files[0],files[0].name,(progress=>{this.updateLoaderIcon(this.root,this.langStrings,progress)}));this.updateLoaderIcon(this.root,this.langStrings),this.filePickerCallback({url:fileURL})}catch(error){this.root.querySelector(_selectors.default.EMBED.elements.urlWarning).innerHTML=void 0!==error.error?error.error:error,(0,_helpers.showElements)(_selectors.default.EMBED.elements.urlWarning,this.root),(0,_helpers.stopMediaLoading)(this.root,_selectors.default.EMBED.type)}})),_defineProperty(this,"registerMediaTypeSelectorEvents",(root=>{const mediaLinkAsAudio=root.querySelector(_selectors.default.EMBED.actions.mediaLinkAsAudio);mediaLinkAsAudio&&mediaLinkAsAudio.addEventListener("click",(()=>{this.mediaTagType="audio",this.mediaTypeSelectorModal.destroy(),(0,_helpers.startMediaLoading)(this.root,_selectors.default.EMBED.type),this.processMediaPreview("link")}));const mediaLinkAsVideo=root.querySelector(_selectors.default.EMBED.actions.mediaLinkAsVideo);mediaLinkAsVideo&&mediaLinkAsVideo.addEventListener("click",(()=>{this.mediaTagType="video",this.mediaTypeSelectorModal.destroy(),(0,_helpers.startMediaLoading)(this.root,_selectors.default.EMBED.type),this.processMediaPreview("link")}))})),(0,_helpers.setPropertiesFromData)(this,data)}}}));

//# sourceMappingURL=embedinsert.min.js.map