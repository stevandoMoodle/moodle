define("tiny_media/embed/embedhandler",["exports","../selectors","./embedinsert","../helpers","core/modal_events","editor_tiny/utils"],(function(_exports,_selectors,_embedinsert,_helpers,ModalEvents,_utils){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EmbedHandler=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj},ModalEvents=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(ModalEvents);_exports.EmbedHandler=class{constructor(data){_defineProperty(this,"loadTemplatePromise",(templateContext=>{templateContext.elementid=this.editor.id,templateContext.bodyTemplate=_selectors.default.EMBED.template.body.insertMediaBody,templateContext.footerTemplate=_selectors.default.EMBED.template.footer.insertMediaFooter,templateContext.selector="EMBED",Promise.all([(0,_helpers.body)(templateContext,this.root),(0,_helpers.footer)(templateContext,this.root)]).then((()=>{new _embedinsert.EmbedInsert(this).init()})).catch((error=>{window.console.log(error)}))})),_defineProperty(this,"clickHandler",(async e=>{if(e.target.closest(_selectors.default.EMBED.actions.mediaBrowser)){e.preventDefault();const params=await(0,_utils.displayFilepicker)(this.editor,"media");this.trackFilePickerCallback(params)}e.target.closest(_selectors.default.EMBED.actions.addUrl)&&this.urlChanged()})),_defineProperty(this,"registerEventListeners",(async modal=>{await modal.getBody();const $root=modal.getRoot(),root=$root[0];this.canShowFilePickerTrack&&root.addEventListener("click",this.clickHandler.bind(this)),root.addEventListener("input",(e=>{const urlEle=e.target.closest(_selectors.default.EMBED.elements.fromUrl);urlEle&&this.toggleUrlButton(urlEle)})),$root.on(ModalEvents.hidden,(()=>{this.currentModal.destroy()}))})),(0,_helpers.setPropertiesFromData)(this,data)}urlChanged(){(0,_helpers.hideElements)(_selectors.default.EMBED.elements.urlWarning,this.root);const url=this.root.querySelector(_selectors.default.EMBED.elements.fromUrl).value;url&&url!==this.currentUrl&&window.console.log(url)}trackFilePickerCallback(params){""!==params.url&&window.console.log(params.url)}toggleUrlButton(input){const url=input.value;this.root.querySelector(_selectors.default.EMBED.actions.addUrl).disabled=!(""!==url&&(0,_helpers.isValidUrl)(url))}}}));

//# sourceMappingURL=embedhandler.min.js.map