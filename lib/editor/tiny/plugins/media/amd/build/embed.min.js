define("tiny_media/embed",["exports","./embedmodal","./options","editor_tiny/options","./embed/embedhandler","./embed/embedhelpers","./embed/embedinsert"],(function(_exports,_embedmodal,_options,_options2,_embedhandler,_embedhelpers,_embedinsert){var obj;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_embedmodal=(obj=_embedmodal)&&obj.__esModule?obj:{default:obj};return _exports.default=class{constructor(editor){_defineProperty(this,"editor",null),_defineProperty(this,"canShowFilePicker",!1),_defineProperty(this,"canShowFilePickerPoster",!1),_defineProperty(this,"canShowFilePickerTrack",!1),_defineProperty(this,"loadSelectedMedia",(()=>{let mediaSource=null;mediaSource="link"===this.mediaType?this.selectedMedia.href:this.selectedMedia.querySelector("source").src;const embedInsert=new _embedinsert.EmbedInsert(this);embedInsert.init(),embedInsert.loadMediaPreview(mediaSource),new _embedhandler.EmbedHandler(this).registerEventListeners(this.currentModal)}));const permissions=(0,_options.getEmbedPermissions)(editor),options=(0,_options2.getFilePicker)(editor,"media");this.canShowFilePicker=permissions.filepicker&&void 0!==(0,_options2.getFilePicker)(editor,"media"),this.canShowFilePickerPoster=permissions.filepicker&&void 0!==(0,_options2.getFilePicker)(editor,"image"),this.canShowFilePickerTrack=permissions.filepicker&&void 0!==(0,_options2.getFilePicker)(editor,"subtitle"),this.canShowDropZone=Object.values(options.repositories).some((repository=>"upload"===repository.type)),this.editor=editor}async displayDialogue(){const[mediaType,selectedMedia]=(0,_embedhelpers.getSelectedMediaElement)(this.editor);if(this.mediaType=mediaType,this.selectedMedia=selectedMedia,this.currentModal=await _embedmodal.default.create(),this.root=this.currentModal.getRoot()[0],this.selectedMedia)this.isUpdating=!0,this.loadSelectedMedia();else{const embedHandler=new _embedhandler.EmbedHandler(this);embedHandler.loadTemplatePromise((0,_embedhelpers.insertMediaTemplateContext)(this)),embedHandler.registerEventListeners(this.currentModal)}}},_exports.default}));

//# sourceMappingURL=embed.min.js.map