{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport EmbedModal from './embedmodal';\nimport {getEmbedPermissions} from './options';\nimport {getFilePicker} from 'editor_tiny/options';\nimport {EmbedHandler} from './embed/embedhandler';\nimport {\n    insertMediaTemplateContext,\n    getSelectedMediaElement,\n} from './embed/embedhelpers';\nimport {EmbedInsert} from './embed/embedinsert';\n\nexport default class MediaEmbed {\n    editor = null;\n    canShowFilePicker = false;\n    canShowFilePickerPoster = false;\n    canShowFilePickerTrack = false;\n\n    constructor(editor) {\n        const permissions = getEmbedPermissions(editor);\n        const options = getFilePicker(editor, 'media');\n\n        // Indicates whether the file picker can be shown.\n        this.canShowFilePicker = permissions.filepicker && (typeof getFilePicker(editor, 'media') !== 'undefined');\n        this.canShowFilePickerPoster = permissions.filepicker && (typeof getFilePicker(editor, 'image') !== 'undefined');\n        this.canShowFilePickerTrack = permissions.filepicker && (typeof getFilePicker(editor, 'subtitle') !== 'undefined');\n        this.canShowDropZone = Object.values(options.repositories).some(repository => repository.type === 'upload');\n        this.editor = editor;\n    }\n\n    async displayDialogue() {\n        const [mediaType, selectedMedia] = getSelectedMediaElement(this.editor);\n        this.mediaType = mediaType;\n        this.selectedMedia = selectedMedia;\n        this.currentModal = await EmbedModal.create();\n        this.root = this.currentModal.getRoot()[0];\n\n        if (this.selectedMedia) {\n            // Preview the selected media.\n            this.isUpdating = true;\n            this.loadSelectedMedia();\n        } else {\n            const embedHandler = new EmbedHandler(this);\n            embedHandler.loadTemplatePromise(insertMediaTemplateContext(this));\n            embedHandler.registerEventListeners(this.currentModal);\n        }\n    }\n\n    loadSelectedMedia = () => {\n        let mediaSource = null;\n        if (this.mediaType === 'link') {\n            mediaSource = this.selectedMedia.href;\n        } else {\n            mediaSource = this.selectedMedia.querySelector('source').src;\n        }\n\n        // Load media preview.\n        const embedInsert = new EmbedInsert(this);\n        embedInsert.init();\n        embedInsert.loadMediaPreview(mediaSource);\n        (new EmbedHandler(this)).registerEventListeners(this.currentModal);\n    };\n}\n"],"names":["constructor","editor","mediaSource","this","mediaType","selectedMedia","href","querySelector","src","embedInsert","EmbedInsert","init","loadMediaPreview","EmbedHandler","registerEventListeners","currentModal","permissions","options","canShowFilePicker","filepicker","canShowFilePickerPoster","canShowFilePickerTrack","canShowDropZone","Object","values","repositories","some","repository","type","EmbedModal","create","root","getRoot","isUpdating","loadSelectedMedia","embedHandler","loadTemplatePromise"],"mappings":"ilBAuCIA,YAAYC,sCALH,gDACW,mDACM,kDACD,6CAgCL,SACZC,YAAc,KAEdA,YADmB,SAAnBC,KAAKC,UACSD,KAAKE,cAAcC,KAEnBH,KAAKE,cAAcE,cAAc,UAAUC,UAIvDC,YAAc,IAAIC,yBAAYP,MACpCM,YAAYE,OACZF,YAAYG,iBAAiBV,iBACxBW,2BAAaV,MAAOW,uBAAuBX,KAAKY,uBAzC/CC,aAAc,gCAAoBf,QAClCgB,SAAU,2BAAchB,OAAQ,cAGjCiB,kBAAoBF,YAAYG,iBAAyD,KAAnC,2BAAclB,OAAQ,cAC5EmB,wBAA0BJ,YAAYG,iBAAyD,KAAnC,2BAAclB,OAAQ,cAClFoB,uBAAyBL,YAAYG,iBAA4D,KAAtC,2BAAclB,OAAQ,iBACjFqB,gBAAkBC,OAAOC,OAAOP,QAAQQ,cAAcC,MAAKC,YAAkC,WAApBA,WAAWC,YACpF3B,OAASA,qCAIPG,UAAWC,gBAAiB,yCAAwBF,KAAKF,gBAC3DG,UAAYA,eACZC,cAAgBA,mBAChBU,mBAAqBc,oBAAWC,cAChCC,KAAO5B,KAAKY,aAAaiB,UAAU,GAEpC7B,KAAKE,mBAEA4B,YAAa,OACbC,wBACF,OACGC,aAAe,IAAItB,2BAAaV,MACtCgC,aAAaC,qBAAoB,4CAA2BjC,OAC5DgC,aAAarB,uBAAuBX,KAAKY"}