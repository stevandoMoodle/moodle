{"version":3,"file":"audiomodule.min.js","sources":["../../src/recording/audiomodule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Record RTC - audio module configuration.\n *\n * @module      tiny_recordrtc/audiomodule\n * @copyright   2022 Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport * as CompatCheckModule from './compatcheckmodule';\nimport * as CommonModule from './commonmodule';\nimport * as AbstractModule from './abstractmodule';\nimport {component} from '../common';\n\n\n// Setup to get audio stream from microphone.\nconst captureAudio = (config) => {\n    CommonModule.captureUserMedia(\n        // Media constraints.\n        {\n            audio: true\n        },\n\n        // Success callback.\n        function(audioStream) {\n            // Set audio player source to microphone stream.\n            CommonModule.data.playerDOM.srcObject = audioStream;\n\n            config.onMediaCaptured(audioStream);\n        },\n\n        // Error callback.\n        function(error) {\n            config.onMediaCapturingFailed(error);\n        }\n    );\n};\n\nexport const init = async(scope) => {\n    const [\n        startrecording,\n        recordagain,\n        recordingfailed\n    ] = await Promise.all([\n        getString('startrecording', component),\n        getString('recordagain', component),\n        getString('recordingfailed', component)\n    ]);\n\n    // Assignment of global variables.\n    CommonModule.data.editorScope = scope; // Allows access to the editor's \"this\" context.\n    CommonModule.data.alertWarning = document.querySelector('div#alert-warning');\n    CommonModule.data.alertDanger = document.querySelector('div#alert-danger');\n    CommonModule.data.player = document.querySelector('audio#player');\n    CommonModule.data.playerDOM = document.querySelector('audio#player');\n    CommonModule.data.startStopBtn = document.querySelector('button#start-stop');\n    CommonModule.data.uploadBtn = document.querySelector('button#upload');\n    CommonModule.data.recType = 'audio';\n    CommonModule.data.maxUploadSize = scope.maxrecsize;\n\n    // Show alert and close plugin if WebRTC is not supported.\n    CompatCheckModule.checkHasGum();\n    // Show alert and redirect user if connection is not secure.\n    CompatCheckModule.checkSecure();\n\n    // Run when user clicks on \"record\" button.\n    CommonModule.data.startStopBtn.addEventListener('click', function() {\n        CommonModule.data.startStopBtn.disabled = true;\n\n        // If button is displaying \"Start Recording\" or \"Record Again\".\n        if ((CommonModule.data.startStopBtn.textContent.trim() === startrecording) ||\n            (CommonModule.data.startStopBtn.textContent.trim() === recordagain) ||\n            (CommonModule.data.startStopBtn.textContent.trim() === recordingfailed)) {\n            // Make sure the audio player and upload button are not shown.\n            CommonModule.data.player.parentElement.parentElement.classList.add('hide');\n            CommonModule.data.uploadBtn.parentElement.parentElement.classList.add('hide');\n\n            // Change look of recording button.\n            CommonModule.data.startStopBtn.classList.replace('btn-outline-danger', 'btn-danger');\n\n            // Empty the array containing the previously recorded chunks.\n            CommonModule.data.chunks = [];\n            CommonModule.data.blobSize = 0;\n            CommonModule.data.uploadBtn.removeEventListener('click', CommonModule.uploadHandler);\n\n            // Initialize common configurations.\n            var commonConfig = {\n                // When the stream is captured from the microphone/webcam.\n                onMediaCaptured: function(stream) {\n                    // Make audio stream available at a higher level by making it a property of the common module.\n                    CommonModule.data.stream = stream;\n\n                    CommonModule.startRecording(CommonModule.data.recType, CommonModule.data.stream);\n                },\n\n                // Revert button to \"Record Again\" when recording is stopped.\n                onMediaStopped: function(btnLabel) {\n                    CommonModule.data.startStopBtn.textContent = btnLabel;\n                    CommonModule.data.startStopBtn.disabled = false;\n                    CommonModule.data.startStopBtn.classList.replace('btn-danger', 'btn-outline-danger');\n                },\n\n                // Handle recording errors.\n                onMediaCapturingFailed: function(error) {\n                    AbstractModule.handleGumErrors(error, commonConfig);\n                }\n            };\n\n            // Capture audio stream from microphone.\n            captureAudio(commonConfig);\n        } else { // If button is displaying \"Stop Recording\".\n            // First of all clears the countdownTicker.\n            window.clearInterval(CommonModule.data.countdownTicker);\n\n            // Disable \"Record Again\" button for 1s to allow background processing (closing streams).\n            window.setTimeout(function() {\n                CommonModule.data.startStopBtn.disabled = false;\n            }, 1000);\n\n            // Stop recording.\n            CommonModule.stopRecording(CommonModule.data.stream);\n\n            // Change button to offer to record again.\n            CommonModule.data.startStopBtn.textContent = recordagain;\n            CommonModule.data.startStopBtn.classList.replace('btn-danger', 'btn-outline-danger');\n        }\n    });\n};\n"],"names":["init","scope","Promise","all","component","startrecording","recordagain","recordingfailed","CommonModule","data","editorScope","alertWarning","document","querySelector","alertDanger","player","playerDOM","startStopBtn","uploadBtn","recType","maxUploadSize","maxrecsize","CompatCheckModule","checkHasGum","checkSecure","addEventListener","disabled","textContent","trim","parentElement","classList","add","replace","chunks","blobSize","removeEventListener","uploadHandler","commonConfig","onMediaCaptured","stream","startRecording","onMediaStopped","btnLabel","onMediaCapturingFailed","error","AbstractModule","handleGumErrors","config","captureUserMedia","audio","audioStream","srcObject","window","clearInterval","countdownTicker","setTimeout","stopRecording"],"mappings":"8+FAqDaA,kCAAO,iBAAMC,yNAKZC,QAAQC,IAAI,EAClB,mBAAU,iBAAkBC,oBAC5B,mBAAU,cAAeA,oBACzB,mBAAU,kBAAmBA,sHAN7BC,sCACAC,mCACAC,uCAQJC,aAAaC,KAAKC,YAAcT,MAChCO,aAAaC,KAAKE,aAAeC,SAASC,cAAc,qBACxDL,aAAaC,KAAKK,YAAcF,SAASC,cAAc,oBACvDL,aAAaC,KAAKM,OAASH,SAASC,cAAc,gBAClDL,aAAaC,KAAKO,UAAYJ,SAASC,cAAc,gBACrDL,aAAaC,KAAKQ,aAAeL,SAASC,cAAc,qBACxDL,aAAaC,KAAKS,UAAYN,SAASC,cAAc,iBACrDL,aAAaC,KAAKU,QAAU,QAC5BX,aAAaC,KAAKW,cAAgBnB,MAAMoB,WAGxCC,kBAAkBC,cAElBD,kBAAkBE,cAGlBhB,aAAaC,KAAKQ,aAAaQ,iBAAiB,SAAS,cACrDjB,aAAaC,KAAKQ,aAAaS,UAAW,EAGrClB,aAAaC,KAAKQ,aAAaU,YAAYC,SAAWvB,gBACtDG,aAAaC,KAAKQ,aAAaU,YAAYC,SAAWtB,aACtDE,aAAaC,KAAKQ,aAAaU,YAAYC,SAAWrB,gBAAkB,CAEzEC,aAAaC,KAAKM,OAAOc,cAAcA,cAAcC,UAAUC,IAAI,QACnEvB,aAAaC,KAAKS,UAAUW,cAAcA,cAAcC,UAAUC,IAAI,QAGtEvB,aAAaC,KAAKQ,aAAaa,UAAUE,QAAQ,qBAAsB,cAGvExB,aAAaC,KAAKwB,OAAS,GAC3BzB,aAAaC,KAAKyB,SAAW,EAC7B1B,aAAaC,KAAKS,UAAUiB,oBAAoB,QAAS3B,aAAa4B,mBAGlEC,aAAe,CAEfC,gBAAiB,SAASC,QAEtB/B,aAAaC,KAAK8B,OAASA,OAE3B/B,aAAagC,eAAehC,aAAaC,KAAKU,QAASX,aAAaC,KAAK8B,SAI7EE,eAAgB,SAASC,UACrBlC,aAAaC,KAAKQ,aAAaU,YAAce,SAC7ClC,aAAaC,KAAKQ,aAAaS,UAAW,EAC1ClB,aAAaC,KAAKQ,aAAaa,UAAUE,QAAQ,aAAc,uBAInEW,uBAAwB,SAASC,OAC7BC,eAAeC,gBAAgBF,MAAOP,gBAxFpCU,OA6FGV,aA5FrB7B,aAAawC,iBAET,CACIC,OAAO,IAIX,SAASC,aAEL1C,aAAaC,KAAKO,UAAUmC,UAAYD,YAExCH,OAAOT,gBAAgBY,gBAI3B,SAASN,OACLG,OAAOJ,uBAAuBC,eA+E9BQ,OAAOC,cAAc7C,aAAaC,KAAK6C,iBAGvCF,OAAOG,YAAW,WACd/C,aAAaC,KAAKQ,aAAaS,UAAW,IAC3C,KAGHlB,aAAagD,cAAchD,aAAaC,KAAK8B,QAG7C/B,aAAaC,KAAKQ,aAAaU,YAAcrB,YAC7CE,aAAaC,KAAKQ,aAAaa,UAAUE,QAAQ,aAAc,sBA5GtD,IAACe"}