{"version":3,"file":"setter.min.js","sources":["../../src/bibliography/setter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    tiny_bibliography\n * @copyright  2023 Stevani Andolo <stevani@hotmail.com.au>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getStrings} from 'core/str';\nimport {component} from './../common';\nimport StyleSourceSelector from './style_source_selector';\nimport {fieldTemplate} from './templateloader';\nimport {\n    byId,\n    showElement,\n    hideElement,\n    ucFirst,\n} from './helper';\nimport {\n    removeAttachedExampleListeners,\n    getExample\n} from './example';\n\nexport default class Setter extends StyleSourceSelector {\n    constructor() {\n        super();\n    }\n\n    /**\n     * Initiates the style and source.\n     */\n    initSetter = async() => {\n        this.allData.style = this.DEFAULT.STYLE;\n        this.setSelectedStyle(this.DEFAULT.STYLE);\n        await this.setSelectedSource();\n    };\n\n    /**\n     * Sets bio's style.\n     *\n     * @param {string} data\n     */\n    setStyle = (data = null) => {\n        this.allData.style = data;\n        this.setSelectedStyle(data);\n    };\n\n    /**\n     * Sets source of bibliography.\n     *\n     * @param {string} data\n     */\n    setSource = async(data = null) => {\n        if (!data) {\n            data = this.selectedStyle.DEFAULT.SOURCE;\n        }\n\n        // Clear the previous source's fields.\n        this.fields = [];\n\n        // Set selected source.\n        await this.setSelectedSource(data);\n\n        this.removeListeners();\n\n        // Get fields and insert the dom.\n        await this.loadFieldTemplate();\n\n        this.addListeners();\n\n        // Set bibliography container height to form container's height accordingly.\n        this.resetBibliographyContainerHeight();\n    };\n\n    addListeners = () => {\n        // Then re-create new listeners.\n        getExample(this);\n        this.addClickListeners();\n        this.addChangeListeners();\n        this.addKeyupListeners();\n    };\n\n    removeListeners = () => {\n        // Clear attached listeners.\n        removeAttachedExampleListeners();\n        this.removeAttachedClickListeners();\n        this.removeAttachedChangeListeners();\n        this.removeAttachedKeyupListeners();\n    };\n\n    loadFieldTemplate = async() => {\n        let status = false;\n        if (typeof this.allData.showOtherFields === 'undefined') {\n            status = false;\n        } else if (typeof this.allData.showOtherFields === 'string') {\n            status = (this.allData.showOtherFields === 'true') ? true : false;\n        } else {\n            status = this.allData.showOtherFields;\n        }\n        this.allData.showOtherFields = status;\n\n        // Get fields and insert the dom.\n        const template = await fieldTemplate({\n            ...this, // Object of bibliography.\n            fields: await this.requiredFieldObject() // Arrays of required fields.\n        });\n        byId('main-input-fields').innerHTML = template;\n    };\n\n    /**\n     * Get's all the required fields based on the selected source.\n     *\n     * @returns {Array}\n     */\n    requiredFieldObject = async() => {\n        let labelArray = [];\n        // Get all fields labels and push them in labelArray.\n        this.fields.forEach((field) => {\n            labelArray.push(field.label);\n        });\n\n        // Get labels' string lang.\n        const labels = await getStrings(labelArray.map((key) => ({key, component})));\n\n        let fields = [];\n        let i = 0;\n        // Loop this.fields with custom data for html and push them into fields array.\n        this.fields.forEach((field) => {\n            fields.push({\n                data: field.author ? this.allData[`pure${ucFirst(field.field)}`] : this.allData[field.field],\n                field: field.field,\n                label: labels[i],\n                example: field.example,\n                inputType: field.inputType,\n                author: field.author,\n                show: field.required ?? this.allData.showOtherFields,\n                required: this.allData.showOtherFields ? field.required : this.allData.showOtherFields\n            });\n            i++;\n        });\n\n        return fields;\n    };\n\n    /**\n     * Splits author's name.\n     *\n     * @param {string} field\n     */\n    splitAuthorName(field = null) {\n        const data = this.allData[field];\n        this.allData[`pure${ucFirst(field)}`] = data;\n        this.allData[field] = '';\n        if (!data) {\n            return;\n        }\n\n        if (data.includes(';') === true) {\n            const authors = data.split(';');\n            authors.forEach(author => {\n                author = author.trim();\n                if (author !== '') {\n                    this.setGeneratedAuthorNames(this.generateDetailedAuthorName(author), field);\n                }\n            });\n        } else {\n            this.setGeneratedAuthorNames(this.generateDetailedAuthorName(data), field);\n        }\n    }\n\n    /**\n     * Sets generated author's name.\n     *\n     * @param {string} names\n     * @param {string} field\n     */\n    setGeneratedAuthorNames(names = null, field = null) {\n        if (this.allData[field] !== '') {\n            this.allData[field] += ', ' + names;\n        } else {\n            this.allData[field] = names;\n        }\n    }\n\n    /**\n     * Returns generated author's name.\n     *\n     * @param {string} author\n     * @returns {string}\n     */\n    generateDetailedAuthorName(author = null) {\n        let sureName = '';\n        let firstName = '';\n        let middleName = '';\n\n        if (author.includes(',')) {\n            const names = author.split(',');\n            sureName = names[0];\n            let fmName = names[1];\n\n            if (fmName.includes(' ')) {\n                fmName = fmName.split(' ');\n                let i = 0;\n                fmName.forEach(fm => {\n                    if (fm !== '') {\n                        if (i === 0) {\n                            firstName = fm;\n                        } else {\n                            middleName += fm + ' ';\n                        }\n                        i++;\n                    }\n                });\n            } else {\n                firstName = fmName;\n            }\n        } else {\n            firstName = author;\n        }\n\n        return this.selectedStyle.generateAuthorName(firstName.trim(), middleName.trim(), sureName.trim()).generated;\n    }\n\n    /**\n     * Sets custom authors' names.\n     *\n     * @param {event} event\n     */\n    setCustomAuthorNames(event) {\n        // Show custom author name's fields.\n        const customAuthorName = event.target.closest('[data-action=\"custom-bibliography-author\"]');\n        if (customAuthorName) {\n            const field = customAuthorName.dataset.field;\n            hideElement([`full-${field}-holder`, 'generate-button']);\n            showElement([`custom-${field}-holder`]);\n        }\n\n        // Hide custom author name's fields.\n        const cancelCustom = event.target.closest('[data-action=\"cancel-custom-bibliography-author\"]');\n        if (cancelCustom) {\n            const field = cancelCustom.dataset.field;\n            showElement([`full-${field}-holder`, 'generate-button']);\n            hideElement([`custom-${field}-holder`]);\n        }\n\n        // Process custom author name.\n        const okCustom = event.target.closest('[data-action=\"ok-custom-bibliography-author\"]');\n        if (okCustom) {\n            const field = okCustom.dataset.field;\n            const fullName = this.selectedStyle.generateAuthorName(\n                byId(`id_bibliography_${field}_firstname`).value,\n                byId(`id_bibliography_${field}_middlename`).value,\n                byId(`id_bibliography_${field}_surename`).value\n            ).originated.trim();\n\n            let oriData = byId(`id_bibliography_${field}`).value;\n            if (oriData === '') {\n                oriData = fullName;\n            } else {\n                oriData += '; ' + fullName;\n            }\n\n            this.allData[field] = oriData;\n            this.splitAuthorName(field);\n            this.allData[`pure${ucFirst(field)}`] = oriData;\n\n            byId(`id_bibliography_${field}`).value = oriData;\n\n            // Clear the inputs.\n            byId(`id_bibliography_${field}_firstname`).value = '';\n            byId(`id_bibliography_${field}_middlename`).value = '';\n            byId(`id_bibliography_${field}_surename`).value = '';\n\n            showElement([`full-${field}-holder`, 'generate-button']);\n            hideElement([`custom-${field}-holder`]);\n        }\n    }\n}\n"],"names":["Setter","StyleSourceSelector","constructor","async","allData","style","this","DEFAULT","STYLE","setSelectedStyle","setSelectedSource","data","_this","selectedStyle","SOURCE","fields","removeListeners","loadFieldTemplate","addListeners","resetBibliographyContainerHeight","addClickListeners","addChangeListeners","addKeyupListeners","removeAttachedClickListeners","removeAttachedChangeListeners","removeAttachedKeyupListeners","status","showOtherFields","template","requiredFieldObject","innerHTML","labelArray","forEach","field","push","label","labels","map","key","component","i","author","example","inputType","show","required","splitAuthorName","includes","split","trim","setGeneratedAuthorNames","generateDetailedAuthorName","names","sureName","firstName","middleName","fmName","fm","generateAuthorName","generated","setCustomAuthorNames","event","customAuthorName","target","closest","dataset","cancelCustom","okCustom","fullName","value","originated","oriData"],"mappings":"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"}