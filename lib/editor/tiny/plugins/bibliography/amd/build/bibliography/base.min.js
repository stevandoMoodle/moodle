define("tiny_bibliography/bibliography/base",["exports","core/templates","core/notification","core/str","../common","./helper","./template_loader"],(function(_exports,_templates,_notification,_str,_common,_helper,_template_loader){var obj;function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};return _exports.default=class{constructor(){_defineProperty(this,"citeThis",(async(bio,event)=>{const cite=event.target.closest('[data-action="cite-this"]'),list=bio.editor.dom.select('[class="'.concat(cite.dataset.id,'"]')),index=cite.dataset.index;list&&(bio.editor.insertContent(await _templates.default.render("tiny_bibliography/bibliography_citation",{index:index})),bio.modal.hide())})),_defineProperty(this,"deleteBibliography",((bio,event)=>{const deleteBio=event.target.closest('[data-action="delete-bio"]'),list=bio.editor.dom.select('[class="'.concat(deleteBio.dataset.id,'"]')),index=parseInt(deleteBio.dataset.index);if(list){bio.editor.dom.select('[class="cited-bibliography"]').forEach((ref=>{const text=(0,_helper.getInTextRefNumber)(ref);parseInt(text)===index&&ref.remove()})),list[0].remove(),bio.modal.hide()}})),_defineProperty(this,"editBibliography",(async(bio,editBio)=>{const targetList=bio.editor.dom.select('[class="'.concat(editBio.id,'"]'))[0],dataObject="{".concat(targetList.querySelector(".hide-ori-data").innerHTML.replaceAll('" "','"'),"}"),allData=JSON.parse(dataObject);bio.allData=allData,bio.setStyle(bio.allData.style),(0,_helper.byId)("id_bibliography_style").value=allData.style,bio.setSource(bio.allData.source),(0,_helper.byId)("id_bibliography_source").value=allData.source;const otherFields=(0,_helper.byId)("id_other_fields");"true"!==allData.showOtherFields||otherFields.checked?(0,_helper.byId)("id_other_fields").checked=!1:(0,_helper.byId)("id_other_fields").checked=!0,bio.create=!1,bio.updateId=editBio.id,bio.updateIndex=editBio.id.split("-")[3];1===(0,_helper.byId)("id-button-container").querySelectorAll("button").length&&((0,_helper.byId)("id-button-container").innerHTML+=await(0,_template_loader.viewItemButtons)({id:editBio.id,index:editBio.dataset.index})),(0,_helper.byId)("id-generate-label").textContent=await(0,_str.get_string)("update",_common.component)})),_defineProperty(this,"getRequiredFields",(bio=>{let fields=[];return bio.fields.forEach((field=>{field.required&&fields.push(field.field)})),fields})),_defineProperty(this,"createKeyValuePair",(bio=>{let keyValuePair="";for(const key in bio.allData)"keyValuePair"!==key&&(keyValuePair+=""===keyValuePair?'"'.concat(key,'": "').concat(bio.allData[key],'"'):', "'.concat(key,'": "').concat(bio.allData[key],'"'));bio.allData.keyValuePair=keyValuePair})),_defineProperty(this,"checkRequiredFields",(bio=>{const fields=["style","source"].concat(this.getRequiredFields(bio));let i=0;return fields.every((field=>!(!bio.allData[field]||""===bio.allData[field])&&(i++,!0))),this.createKeyValuePair(bio),i===fields.length})),_defineProperty(this,"generateBibliography",(async bio=>{if(this.checkRequiredFields(bio)){if(bio.create){let bioList=bio.editor.dom.select('[id="id-bibliography-holder"]'),index=bioList.length;index>0&&(index=bioList[0].querySelectorAll("p").length),bio.updateIndex=index+1;const info=await(0,_template_loader.getBioContent)(bio);let bibliography,textNodes;index>0?(textNodes=(0,_helper.getTextNodes)(bioList[0].lastChild),bibliography=info):(textNodes=(0,_helper.getTextNodes)(bio.editor.getBody().lastChild),bibliography=await _templates.default.render("tiny_bibliography/bibliography_header",{info:info}));const currentElement=bio.editor.selection.getNode().getAttribute("class");currentElement&&currentElement.includes("id-bibliography-list-")&&(textNodes=(0,_helper.getTextNodes)(bio.editor.selection.getNode())),bio.editor.selection.setCursorLocation(textNodes[textNodes.length-1],textNodes[textNodes.length-1].textContent.length),await bio.editor.insertContent(bibliography)}else{bio.editor.dom.select('[class="'.concat(bio.updateId,'"]'))[0].innerHTML=await(0,_template_loader.getBioContent)(bio),bio.create=!0}bio.modal.hide()}else(0,_notification.alert)("Error!","You need to provide all information")})),_defineProperty(this,"getTextNodes",((node,nodeType,result)=>{var children=node.childNodes;nodeType=nodeType||3,result=result||[];node.nodeType==nodeType&&result.push(node);for(var i=0;i<children.length;i++)result=this.getTextNodes(children[i],nodeType,result);return result})),_defineProperty(this,"scrollToBottom",(bio=>{bio.editor.dom.select('[id="id-bibliography-holder"]')[0].scrollIntoView({behavior:"smooth",block:"nearest"})}))}},_exports.default}));

//# sourceMappingURL=base.min.js.map