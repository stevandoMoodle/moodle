{"version":3,"file":"style_source_selector.min.js","sources":["../../src/bibliography/style_source_selector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {alert} from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {component} from '../common';\n\n// All styles.\nimport Ieee from './styles/ieee';\n\nimport {byId, toWords} from './helper';\n\n/*\n * @package    tiny_bibliography\n * @copyright  2023 Stevani Andolo <stevani@hotmail.com.au>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport default class StyleSourceSelector {\n    constructor() {\n        this.DEFAULT = {\n            STYLE: 'ieee'\n        };\n    }\n\n    /**\n     * Sets selected style.\n     *\n     * @param {String} data\n     */\n    setSelectedStyle = async(data = null) => {\n        switch (data) {\n            case 'ieee':\n                this.selectedStyle = new Ieee();\n                this.ieee = true;\n                break;\n            default:\n                // Set to default style\n                this.selectedStyle = new Ieee();\n\n                // Set the selected option to default style\n                byId('id_bibliography_style').value = this.DEFAULT.STYLE;\n\n                // Alert the user.\n                alert(\n                    await getString('alert:warning', component),\n                    await getString('stylenotavailable', component, toWords('_', data, true))\n                );\n        }\n    };\n\n    /**\n     * Sets selected source.\n     *\n     * @param {String} data\n     */\n    setSelectedSource = async(data = null) => {\n        this.allData.source = data ?? this.selectedStyle.DEFAULT.SOURCE;\n        this.selectedSource = await this.selectedStyle.setSelectedSource(data);\n        this.fields = this.selectedSource.fields;\n    };\n}\n"],"names":["constructor","async","data","_this","selectedStyle","Ieee","ieee","value","DEFAULT","STYLE","component","allData","source","SOURCE","selectedSource","setSelectedSource","fields"],"mappings":";;;;;uKA+BIA,sEAWmBC,qBAAMC,4DAAO,QAEnB,SADDA,KAEAC,MAAKC,cAAgB,IAAIC,cACzBF,MAAKG,MAAO,OAIZH,MAAKC,cAAgB,IAAIC,+BAGpB,yBAAyBE,MAAQJ,MAAKK,QAAQC,oCAIzC,mBAAU,gBAAiBC,yBAC3B,mBAAU,oBAAqBA,mBAAW,mBAAQ,IAAKR,MAAM,kDAU/DD,qBAAMC,4DAAO,KAC7BC,MAAKQ,QAAQC,OAASV,MAAAA,KAAAA,KAAQC,MAAKC,cAAcI,QAAQK,OACzDV,MAAKW,qBAAuBX,MAAKC,cAAcW,kBAAkBb,MACjEC,MAAKa,OAASb,MAAKW,eAAeE,eAvC7BR,QAAU,CACXC,MAAO"}