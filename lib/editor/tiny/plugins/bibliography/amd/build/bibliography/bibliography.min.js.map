{"version":3,"file":"bibliography.min.js","sources":["../../src/bibliography/bibliography.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    tiny_bibliography\n * @copyright  2023 Stevani Andolo <stevani@hotmail.com.au>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {get_string as getString} from 'core/str';\n\nimport {component} from '../common';\nimport Setter from './setter';\nimport {getExample} from './example';\nimport {getDialogueContent, getBioListWithButtons} from './templateloader';\nimport {byId, getSourceLangString, showElement, ucFirst} from './helper';\n\nexport default class Bibliography extends Setter {\n\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this.modal = null;\n\n        this.allData = {};\n        this.selectedSource = null;\n        this.selectedStyle = null;\n        this.fields = [];\n\n        this.create = true;\n        this.updateId = null;\n        this.updateIndex = null;\n\n        this.attachedClickEventListener = [];\n        this.attachedChangeEventListener = [];\n        this.attachedKeyupEventListener = [];\n        this.initSetter();\n    }\n\n    destroy() {\n        delete this.editor;\n        this.modal.destroy();\n        delete this.modal;\n    }\n\n    async displayDialogue() {\n        const sources = await getSourceLangString(this.selectedStyle.ALL_SOURCES);\n        this.modal = await Modal.create({\n            type: Modal.types.DEFAULT,\n            large: true,\n            title: getString('pluginname', component),\n            body: getDialogueContent(sources)\n        });\n\n        // Destroy the class when hiding the modal.\n        this.modal.getRoot().on(ModalEvents.hidden, () => this.destroy());\n\n        this.modal.getRoot().on(ModalEvents.bodyRendered, async() => {\n            // Generates bibliography list and display in modal.\n            this.generateBioAndDisplayInModal();\n\n            // Manually get the bio example.\n            getExample();\n\n            await this.setSource();\n        });\n\n        this.modal.show();\n    }\n\n    resetBibliographyContainerHeight = () => {\n        const form = byId('bibliography-info-holder');\n        const bibliographyContainer = byId('bibliography-info-list-holder');\n        bibliographyContainer.style.height = `0px`;\n        if (bibliographyContainer) {\n            bibliographyContainer.style.height = `${form.offsetHeight - 15}px`;\n            showElement(['bibliography-info-list-holder']);\n        }\n    };\n\n    addKeyupListeners = () => {\n        const element = this.modal.getRoot()[0];\n        const handler = this.createKeyupListenerHandler.bind(null);\n        element.addEventListener('keyup', handler);\n        this.attachedKeyupEventListener.push([element, handler, 'keyup']);\n    };\n\n    createKeyupListenerHandler = (event) => {\n        const exampleNodes = event.target.closest('[data-type=\"bibliography-info-example\"]');\n        if (exampleNodes) {\n            this.allData[exampleNodes.dataset.name] = exampleNodes.value;\n            if (exampleNodes.dataset.author === 'true') {\n                this.splitAuthorName(exampleNodes.dataset.name);\n            }\n        }\n    };\n\n    removeAttachedKeyupListeners = () => {\n        this.attachedKeyupEventListener.forEach(listener => {\n            // Destruct the listener.\n            const [element, handler, even] = listener;\n\n            // Remove the attached listener.\n            element.removeEventListener(even, handler);\n        });\n        this.attachedKeyupEventListener = [];\n    };\n\n    addChangeListeners = () => {\n        const element = this.modal.getRoot()[0];\n        const handler = this.createChangeListenerHandler.bind(null);\n        element.addEventListener('change', handler);\n        this.attachedChangeEventListener.push([element, handler, 'change']);\n    };\n\n    createChangeListenerHandler = (event) => {\n        const exampleNodes = event.target.closest('[data-type=\"style-source\"]');\n        if (exampleNodes) {\n            const callback = `set${ucFirst(exampleNodes.dataset.name)}`;\n            this[callback](exampleNodes.value);\n        }\n    };\n\n    removeAttachedChangeListeners = () => {\n        this.attachedChangeEventListener.forEach(listener => {\n            // Destruct the listener.\n            const [element, handler, even] = listener;\n\n            // Remove the attached listener.\n            element.removeEventListener(even, handler);\n        });\n        this.attachedChangeEventListener = [];\n    };\n\n    addClickListeners = () => {\n        const element = this.modal.getRoot()[0];\n        const handler = this.createClickListenerHandler.bind(null);\n        element.addEventListener('click', handler);\n        this.attachedClickEventListener.push([element, handler, 'click']);\n    };\n\n    createClickListenerHandler = (event) => {\n        // Sets and generates custom authors' names.\n        this.setCustomAuthorNames(event);\n\n        // Generates a new bibliography list and inserts it.\n        const generateList = event.target.closest('[data-action=\"generate-list\"]');\n        if (generateList) {\n            this.selectedStyle.generateBibliography(this);\n        }\n\n        // Generates and inserts a new citation.\n        const optionalFields = event.target.closest('[data-action=\"show-other-fields\"]');\n        if (optionalFields) {\n            this.allData.showOtherFields = optionalFields.checked;\n            this.setSource(this.allData.source);\n        }\n\n        // Generates and inserts a new citation.\n        const cite = event.target.closest('[data-action=\"cite-this\"]');\n        if (cite) {\n            this.selectedStyle.citeThis(this, event);\n        }\n\n        // Delete citation.\n        const deleteBio = event.target.closest('[data-action=\"delete-bio\"]');\n        if (deleteBio) {\n            this.selectedStyle.deleteBibliography(this, event);\n        }\n\n        // Edit bibliography.\n        const editBio = event.target.closest('[data-action=\"edit-bio\"]');\n        if (editBio) {\n            this.selectedStyle.editBibliography(this, editBio);\n        }\n    };\n\n    removeAttachedClickListeners = () => {\n        this.attachedClickEventListener.forEach(listener => {\n            // Destruct the listener.\n            const [element, handler, even] = listener;\n\n            // Remove the attached listener.\n            element.removeEventListener(even, handler);\n        });\n        this.attachedClickEventListener = [];\n    };\n\n    /**\n     * Generates bibliography list and display them in the modal.\n     */\n    generateBioAndDisplayInModal = () => {\n        let bioList = this.editor.dom.select('[class=\"id-bibliography-holder\"]');\n        if (bioList.length > 0) {\n            let nodes = byId('bibliography-info-list-holder'),\n            index = 1;\n            nodes.innerHTML = '';\n            bioList[0].childNodes.forEach(async node => {\n\n                let newNode;\n                if (node.nodeName === 'P' && node.textContent.trim() !== '') {\n                    let textContent = '';\n                    if (node.firstChild.nodeName !== 'SPAN') {\n                        textContent = node.childNodes[1].innerHTML.replaceAll('\" \"', '\"');\n                    } else {\n                        textContent = node.firstChild.innerHTML.replaceAll('\" \"', '\"');\n                    }\n\n                    newNode = await getBioListWithButtons({\n                        id: node.getAttribute('class'),\n                        last: (index === bioList[0].childNodes.length - 1) ? true : false,\n                        index: index++,\n                        dataObject: `{${textContent}}`,\n                        bio: node.innerHTML.trim(),\n                        heading: false\n                    });\n                } else if (node.nodeName === 'H3' && node.textContent.trim() !== '') {\n                    newNode = await getBioListWithButtons({\n                        id: node.getAttribute('class'),\n                        bio: node.innerHTML.trim(),\n                        heading: true\n                    });\n                }\n\n                if (newNode) {\n                    nodes.innerHTML += newNode;\n                }\n            });\n        }\n    };\n}\n"],"names":["Bibliography","Setter","constructor","editor","form","bibliographyContainer","style","height","offsetHeight","element","this","modal","getRoot","handler","createKeyupListenerHandler","bind","addEventListener","attachedKeyupEventListener","push","event","exampleNodes","target","closest","allData","dataset","name","value","author","splitAuthorName","forEach","listener","even","removeEventListener","createChangeListenerHandler","attachedChangeEventListener","createClickListenerHandler","attachedClickEventListener","setCustomAuthorNames","selectedStyle","generateBibliography","optionalFields","showOtherFields","checked","setSource","source","citeThis","deleteBibliography","editBio","editBibliography","bioList","dom","select","length","nodes","index","innerHTML","childNodes","async","newNode","node","nodeName","textContent","trim","firstChild","replaceAll","id","getAttribute","last","dataObject","bio","heading","selectedSource","fields","create","updateId","updateIndex","initSetter","destroy","sources","ALL_SOURCES","Modal","type","types","DEFAULT","large","title","component","body","on","ModalEvents","hidden","bodyRendered","generateBioAndDisplayInModal","show"],"mappings":"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"}