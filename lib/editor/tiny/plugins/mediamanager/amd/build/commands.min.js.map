{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media Manager commands.\n *\n * @module      tiny_mediamanager/commands\n * @copyright   2022 Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    imageButtonName,\n    icon,\n} from './common';\nimport {MediaManager} from './manager';\n\nexport const getSetup = async() => {\n    const [\n        imageButtonText,\n    ] = await Promise.all([\n        getString('imagebuttontitle', component),\n    ]);\n\n    return (editor) => {\n        const mediaManager = new MediaManager(editor);\n\n        // Register the Menu Button as a toggle.\n        // This means that when highlighted over an existing Media Image element it will show as toggled on.\n        editor.ui.registry.addToggleButton(imageButtonName, {\n            icon,\n            tooltip: imageButtonText,\n            onAction: () => {\n                mediaManager.displayDialogue();\n            },\n            onSetup: api => {\n                return editor.selection.selectorChangedWithUnbind(\n                    'img:not([data-mce-object]):not([data-mce-placeholder])',\n                    api.setActive\n                ).unbind;\n            }\n        });\n\n        editor.ui.registry.addMenuItem(imageButtonName, {\n            icon,\n            tooltip: imageButtonText,\n            onAction: () => {\n                mediaManager.displayDialogue();\n            }\n        });\n    };\n};\n"],"names":["getSetup","Promise","all","component","imageButtonText","editor","mediaManager","MediaManager","ui","registry","addToggleButton","imageButtonName","icon","tooltip","onAction","displayDialogue","onSetup","api","selection","selectorChangedWithUnbind","setActive","unbind","addMenuItem"],"mappings":"yiDA+BaA,sCAAW,0MAGVC,QAAQC,IAAI,EAClB,mBAAU,mBAAoBC,6HAF9BC,iEAKG,SAACC,YACEC,aAAe,IAAIC,sBAAaF,QAItCA,OAAOG,GAAGC,SAASC,gBAAgBC,wBAAiB,CAChDC,KAAAA,aACAC,QAAST,gBACTU,SAAU,WACNR,aAAaS,mBAEjBC,QAAS,SAAAC,YACEZ,OAAOa,UAAUC,0BACpB,yDACAF,IAAIG,WACNC,UAIVhB,OAAOG,GAAGC,SAASa,YAAYX,wBAAiB,CAC5CC,KAAAA,aACAC,QAAST,gBACTU,SAAU,WACNR,aAAaS"}