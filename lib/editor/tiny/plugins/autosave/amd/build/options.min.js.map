{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Options helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/plugin\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {pluginName} from './common';\nimport {\n    getContextId,\n    getDraftItemId,\n} from 'editor_tiny/options';\n\nconst initialisedOptionName = `${pluginName}:initialised`;\nconst pageHashName = `${pluginName}:pagehash`;\nconst pageInstanceName = `${pluginName}:pageinstance`;\nconst autosaveFrequencyName = `${pluginName}:autosaveFrequency`;\n\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n    registerOption(initialisedOptionName, {\n        processor: 'boolean',\n        \"default\": false,\n    });\n\n    registerOption(pageHashName, {\n        processor: 'string',\n        \"default\": '',\n    });\n\n    registerOption(pageInstanceName, {\n        processor: 'string',\n        \"default\": '',\n    });\n    registerOption(pageInstanceName, {\n        processor: 'string',\n        \"default\": '',\n    });\n};\n\nexport const isInitialised = (editor) => editor.options.get(initialisedOptionName);\nexport const markInitialised = (editor) => editor.options.set(initialisedOptionName, true);\nexport const getPageHash = (editor) => editor.options.get(pageHashName);\nexport const getPageInstance = (editor) => editor.options.get(pageInstanceName);\nexport const getAutosaveFrequecy = (editor) => editor.options.get(autosaveFrequencyName);\nexport {\n    getContextId,\n    getDraftItemId,\n};\n"],"names":["initialisedOptionName","pluginName","pageHashName","pageInstanceName","autosaveFrequencyName","editor","registerOption","options","register","processor","get","set"],"mappings":";;;;;;;;IA6BMA,gCAA2BC,mCAC3BC,uBAAkBD,gCAClBE,2BAAsBF,oCACtBG,gCAA2BH,2DAET,SAACI,YACfC,eAAiBD,OAAOE,QAAQC,SACtCF,eAAeN,sBAAuB,CAClCS,UAAW,mBACA,IAGfH,eAAeJ,aAAc,CACzBO,UAAW,iBACA,KAGfH,eAAeH,iBAAkB,CAC7BM,UAAW,iBACA,KAEfH,eAAeH,iBAAkB,CAC7BM,UAAW,iBACA,6BAIU,SAACJ,eAAWA,OAAOE,QAAQG,IAAIV,iDAC7B,SAACK,eAAWA,OAAOE,QAAQI,IAAIX,uBAAuB,yBAC1D,SAACK,eAAWA,OAAOE,QAAQG,IAAIR,wCAC3B,SAACG,eAAWA,OAAOE,QAAQG,IAAIP,gDAC3B,SAACE,eAAWA,OAAOE,QAAQG,IAAIN"}