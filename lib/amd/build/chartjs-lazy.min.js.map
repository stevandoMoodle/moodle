{"version":3,"file":"chartjs-lazy.min.js","sources":["../src/chartjs-lazy.js"],"sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * Description of import into Moodle:\n *\n * - Download Chartjs source code (zip) file from https://github.com/chartjs/Chart.js/releases/latest.\n * - You must build Chart.js to generate the dist files (https://www.chartjs.org/docs/latest/developers/contributing.html#building-and-testing).\n * - Copy /dist/chart.js content to lib/amd/src/chartjs-lazy.js.\n * - Convert line endings to LF-Unix format.\n * - Keep these instructions to the file.\n * - Visit lib/tests/other/chartjstestpage.php to see if the library still works after the update.\n */\n\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone$1(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone$1(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\nisPatternOrGradient: isPatternOrGradient,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));"],"names":["global","factory","this","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_this","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_this2","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","names","map$2","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","keys","Object","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","obj","hslString","color","weight","w2","c1","c2","p","w1","t","rgb1","rgb2","interpolate$1","val","deg","rotate","index_esm","isPatternOrGradient","value","_typeof","toString","getHoverColor","saturate","darken","noop","id","uid","isNullOrUndef","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","array","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","Set","add","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","floor","fraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","width","height","top","bottom","getRelativePosition","evt","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolve","resolveFallback","getScope","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","last","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","freeze","__proto__","easingEffects","_deprecated","fontString","pixelSize","fontStyle","fontFamily","binarySearch","metaset","axis","controller","_sorted","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","startAngle","endAngle","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","changed","refitBoxes","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","updatePos","handleMaxPadding","BasePlatform","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","animationOptions","colors","properties","numbers","active","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","scaleID","adata","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","defaultClip","getMaxOverflow","disabled","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","_this3","resolveNamedOptions","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","Element","final","_this4","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","offset","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grid","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","tickFont","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getPixelForValue","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","_this6","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_this7","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","_this8","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","_this9","init","hasUpdated","_destroyDatasetMeta","_dataset","_this10","newControllers","_removeUnreferencedMetasets","order","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_this11","reset","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this12","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_this13","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_this14","_add","detached","_this15","_remove","isAttached","_this16","activeElements","lastActive","_this17","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_this18","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","abstract","version","unregister","DateAdapter","timestamp","amount","unit","weekday","members","_adapters","_date","computeMinSampleSize","curr","$bar","visibleMetas","getAllParsedValues","getAllScaleValues","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","updateElement","grouped","_getStacks","pixels","barThickness","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","getPixelForDecimal","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","_value_","BubbleController","tooltip","DoughnutController","innerRadius","outerRadius","getter","circumference","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","_this21","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this22","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","destroy","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","interpolate","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","tgt","subBounds","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","cursor","defaultColor","fontColor","halfFontSize","textDirection","_this29","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","_this31","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","_this32","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","_this33","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","_this34","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","_this39","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","_this40","gridLineOpts","drawRadiusLine","_this41","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","exports","module","define","amd","globalThis","self"],"mappings":"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"}